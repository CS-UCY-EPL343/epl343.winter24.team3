import sqlite3

# > connect if db exist - create if database doesn't.
connection = sqlite3.connect('epl343.db')
# > create cursor to access the db.
cursor = connection.cursor()

q1 = """CREATE TABLE IF NOT EXISTS USER
    ( 
    UID INTEGER IDENTITY(1, 1) NULL,
    PASS_HASHED BLOB NULL,
    USERNAME VARCHAR NULL,

    PRIMARY KEY (UID),
    UNIQUE (USERNAME)
    );

    CREATE TABLE IF NOT EXISTS ENTRY
    (
        MIN_REQUIREMENT INTEGER NULL,
        QNT INTEGER NULL,
        SIZE INTEGER NULL,
        CATEGORY VARCHAR NULL,
        NAME VARCHAR NULL,
        SUPPLIER VARCHAR NULL,
                                    PHOTO BLOB NULL,                        
        AVG_PER_WEEK REAL NULL,
        ENTRY_ID INTEGER NULL,
        UID INTEGER NULL,

        PRIMARY KEY (ENTRY_ID),
        UNIQUE (NAME, SIZE)
    );

    CREATE TABLE IF NOT EXISTS LOG
    (
        LOG_ID INT NULL,
        DATE_TIME DATETIME NULL,
        QNT_DIF INTEGER NULL,
        UID INTEGER NULL,
        ENTRY_ID INTEGER IDENTITY(1, 1) NULL,

        PRIMARY KEY (LOG_ID)
    );

    CREATE TABLE IF NOT EXISTS PENDING_TRANSACTIONS
    (
        TRANS_ID INT NULL,
        UID_REQ_TRANS INT NULL,
        UID_ANS_TRANS INT NULL,

        PRIMARY KEY (TRANS_UID),
        UNIQUE (TRANS_ID, UID_REQ_TRANS, UID_ANS_TRANS)
    ); 

    CREATE TABLE IF NOT EXISTS QUICK_ACCESS
    (
        UID INT NULL,
        UID_OTHER INT NULL,

    PRIMARY KEY (UID, USER_OTHER)
    );

    ALTER TABLE ENTRY ADD CONSTRAINT ENTRY_USER FOREIGN KEY UID REFERENCES USER(UID)
    ALTER TABLE LOG ADD CONSTRAINT LOG_USER FOREIGN KEY UID REFERENCES USER(UID)
    ALTER TABLE LOG ADD CONSTRAINT LOG_ENTRY FOREIGN KEY ENTRY_ID REFERENCES ENTRY(ENTRY_ID)
    ALTER TABLE PENDING_TRANSACTIONS ADD CONSTRAINT REQUESTEE FOREIGN KEY UID_REQ_TRANS REFERENCES USER(UID)
    ALTER TABLE PENDING_TRANSACTIONS ADD CONSTRAINT ACCEPTEE FOREIGN KEY UID_ANS_TRANS REFERENCES USER(UID)
    ALTER TABLE QUICK_ACCESS ADD CONSTRAINT CURRENT_USER FOREIGN KEY UID REFERENCES USER(UID)
    ALTER TABLE QUICK_ACCESS ADD CONSTRAINT USER_ACCESS FOREIGN KEY UID_OTHER REFERENCES USER(UID)
    
    """